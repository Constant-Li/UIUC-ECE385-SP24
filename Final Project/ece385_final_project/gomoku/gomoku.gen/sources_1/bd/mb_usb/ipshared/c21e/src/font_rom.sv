module font_rom ( input [4:0]	addr,
				  output [15:0]	data
					 );

				
	// ROM definition				
	parameter [0:31][15:0] ROM = {
	    // black/white chess
	    16'b0000000000000000, // 1
        16'b0000000000000000, // 2
        16'b0000000000000000, // 3
        16'b0000011111100000, // 4
        16'b0000111111110000, // 5
        16'b0001111111111000, // 6
        16'b0001111111111000, // 7
        16'b0001111111111000, // 8
        16'b0001111111111000, // 9
        16'b0001111111111000, // 10
        16'b0001111111111000, // 11
        16'b0000111111110000, // 12
        16'b0000011111100000, // 13
        16'b0000000000000000, // 14
        16'b0000000000000000, // 15
        16'b0000000000000000, // 16
         // blank, no chess
	    16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000, // 0
        16'b0000000000000000  // 0
        };

	assign data = ROM[addr];

endmodule  