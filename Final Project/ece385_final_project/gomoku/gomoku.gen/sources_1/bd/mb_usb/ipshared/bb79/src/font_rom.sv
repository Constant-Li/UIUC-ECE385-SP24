module font_rom ( input [5:0]	addr,
				  output [23:0]	data
					 );

				
	// ROM definition				
	parameter [0:48][23:0] ROM = {
	    // black/white chess
	    24'b0000000000000000, // 1
        24'b0000000000000000, // 2
        24'b0000000000000000, // 3
        24'b0000011111100000, // 4
        24'b0000111111110000, // 5
        24'b0001111111111000, // 6
        24'b0001111111111000, // 7
        24'b0001111111111000, // 8
        24'b0001111111111000, // 9
        24'b0001111111111000, // 10
        24'b0001111111111000, // 11
        24'b0000111111110000, // 12
        24'b0000011111100000, // 13
        24'b0000000000000000, // 14
        24'b0000000000000000, // 15
        24'b0000000000000000, // 16
        24'b0000000000000000, // 17
        24'b0000000000000000, // 18
        24'b0000000000000000, // 19
        24'b0000000000000000, // 20
        24'b0000000000000000, // 21
        24'b0000000000000000, // 22
        24'b0000000000000000, // 23
        24'b0000000000000000, // 24
         // blank, no chess
	    24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
	    24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
	    24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
	    24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
	    24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000, // 0
        24'b0000000000000000  // 0
        };

	assign data = ROM[addr];

endmodule  